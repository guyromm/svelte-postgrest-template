* what & why?
- [[https://svelte.dev/][svelte]] is the hot new FE dev stuff. do [[https://svelte.dev/tutorial/basics][the tutorial]] to get hooked. [[https://sapper.svelte.dev/][sapper]] - its equivalent of SSR
  framework, not unlike next.js
- [[http://postgrest.org/][postgrest]] is a really nice backend to quickly prototype apps by
  definining data & permissions, without having to write backend.
- [[https://every-layout.dev/][every layout]] is a fresh approach to plain css, with reusable components that make sense. borrowed from [[https://github.com/SilvanCodes/svelte-layout-components][SilvanCodes/svelte-layout-components]].
- some social login love thrown in for good measure, uses [[https://github.com/beyonk-adventures/svelte-social-auth][beyonk-adventures/svelte-social-auth]]
- tmux & tmuxinator are used to run multiple processes and an editor, because nothing beats tmux and emacs (use [[http://web-mode.org/][web-mode]] to edit svelte!)
* prequisites for dev env
1. [[https://github.com/PostgREST/postgrest/releases/latest][postgrest]] - install according to [[http://postgrest.org/en/v6.0/tutorials/tut0.html][instructions]].
   1. [[https://github.com/michelp/pgjwt][pgjwt]] - postgresql jwt extension for postgrest auth
2. [[https://github.com/tmuxinator/tmuxinator][tmuxinator]] - to run auth validation & postgrest, possibly other services - sudo apt install tmuxinator
3. [[https://github.com/nvm-sh/nvm][nvm]] - to easily swap node/npm versions. tested with node v13.11.0.
* cloning
#+BEGIN_SRC bash
npx degit https://github.com/guyromm/svelte-postgrest-template svelte-postgrest-app
#+END_SRC
* package.json dependencies
#+BEGIN_SRC bash
nvm use && cd sapper-app ; npm i ; cd -
nvm use && cd common ; npm i ; cd -
nvm use && cd cli ; npm i ; cd -
#+END_SRC
* .env
#+BEGIN_SRC bash
echo 'DBNAME=svelte_postgrest_app' >> .env
echo 'APPNAME=svelte_postgrest_app' >> .env
echo 'POSTGRESTPORT=3007' >> .env
echo 'PGDSN=socket:/var/run/postgresql?db=svelte_postgrest_app >> .env
echo 'POSTGREST_BASE_URI=http://localhost:3007' >> .env
echo 'GOOGLE_CLIENT_ID=xxxxx-xxxx.apps.googleusercontent.com' >> .env
echo 'FACEBOOK_APP_ID=123412341234' >> .env
#+END_SRC

#+RESULTS:

* database initialization
#+BEGIN_SRC bash
source .env
echo 'DBNAME:'$DBNAME
sudo -u postgres psql template1 -c 'drop database '$DBNAME
sudo -u postgres psql template1 -c 'create database '$DBNAME
sudo -u postgres psql template1 -c "grant all on database $DBNAME to $USER"
psql $DBNAME -c 'create extension pgjwt cascade';
ls sql/auth/*sql | sort | xargs -n1 psql $DBNAME -f # auth schema
#+END_SRC
* jwt_secret
#+BEGIN_SRC bash
source .env
SEC=$(head /dev/urandom | tr -dc A-F0-9 | head -c 64 ; echo '')
echo 'DBNAME:'$DBNAME
echo 'SEC:'$SEC
sed -i -E 's/jwt-secret=".*"/jwt-secret="'$SEC'"/g' postgrest.conf
sed -i -E 's/db-uri=".*"/db-uri="postgres:\/\/\/'$DBNAME'"/g' postgrest.conf
sed -i -E 's/server-port = .*/server-port = '$POSTGRESTPORT'/g' postgrest.conf
sed -i -E 's/^name: .*/name: '$APPNAME'/g' .tmuxinator.yml
psql $DBNAME -c "ALTER DATABASE $DBNAME SET app.jwt_secret = '$SEC'"
#+END_SRC
* launch
#+BEGIN_SRC bash
tmuxinator local
#+END_SRC

